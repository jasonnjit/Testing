Protractor is built on top of WebDriver (Selenium) for AngularJs app, but it's possible to use it for other non-AngularJs applications.

Check this:
https://github.com/angular/protractor/issues/453

How to test on non-Angular app?

1. add this line into scripts
browser.ignoreSynchronization = true;

2. use the comment out scripts below if necessary

//    browser.driver.findElement(By.id('username')).clear();
//    (browser.driver.findElement(By.id('password'))).clear();
//    (browser.driver.findElement(By.id('username'))).sendKeys('CHAINAD2720');
//    (browser.driver.findElement(By.id('password'))).sendKeys('NC2017nc');
//    (browser.driver.findElement(By.id('buttonStyle'))).click();
    
    element(by.id("username")).clear();
    element(by.id("password")).clear();
    element(by.id("username")).sendKeys('CHAINAD2720');
    element(by.id("password")).sendKeys('NC2017nc');

3. Check this link
https://github.com/angular/protractor/blob/master/docs/api-overview.md

It says, 
browser - A wrapper around an instance of WebDriver, used for navigation and page-wide information. 
The browser.get method loads a page. Protractor expects Angular to be present on a page, so it will throw an error 
if the page it is attempting to load does not contain the Angular library. (If you need to interact with a 
non-Angular page, you may access the wrapped webdriver instance directly with browser.driver).

















